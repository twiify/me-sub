server {
    listen 80;
    listen [::]:80;
    server_name {{DOMAIN}};
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name {{DOMAIN}};

    ssl_certificate /etc/nginx/ssl/{{DOMAIN}}/full.pem;
    ssl_certificate_key /etc/nginx/ssl/{{DOMAIN}}/key.pem;

    location / {
        resolver 127.0.0.11 valid=5s;
        set $upstream_server {{FUCK_SITE}};
        proxy_pass $upstream_server;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;

        proxy_read_timeout 600s;
        client_body_timeout 300s;
    }

    location {{NGINX_PATH}} {
        grpc_pass grpc://xray:{{NGINX_LOCAL_PORT}};
    }
    location /{{SUBSCRIPTION_TOKEN}}/vless {
        alias {{OUTPUT_DIR}}/vless_sub.txt;
        default_type 'text/plain; charset=utf-8';
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        access_log off;
    }
    location /{{SUBSCRIPTION_TOKEN}}/clash {
        alias {{OUTPUT_DIR}}/clash_sub.txt;
        default_type 'text/plain; charset=utf-8';
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        access_log off;
    }
}
