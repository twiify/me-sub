user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;
}

http {

    ##
    # Basic
    ##
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile  on;
    tcp_nopush  on;

    # 全局超时设置
    client_header_timeout   15s;
    client_body_timeout     30s;
    send_timeout            30s;
    keepalive_timeout       75s;
    # 默认的代理超时
    proxy_connect_timeout   10s;
    proxy_send_timeout      60s;
    proxy_read_timeout      120s;

    types_hash_max_size  2048;
    include  /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size  128;
    client_header_buffer_size  32k;
    large_client_header_buffers  4  32k;
    client_max_body_size  1024m;
    client_body_buffer_size  10m;

    ##
    # Comporess
    ##
    gzip  on;
    gzip_comp_level  5;
    gzip_static  on;
    gzip_min_length  10240;
    gzip_disable  "MSIE [1-6]\.(?!.*SV1)";

    ##
    # SSL
    ##
    ssl_session_cache  shared:SSL:30m;
    ssl_session_timeout  1d;
    ssl_session_tickets  off;
    ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers  on;
    ssl_buffer_size  4k;
    ssl_ciphers  'TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5';

    ##
    # Custom site configurations
    ##
    include /etc/nginx/conf.d/*.conf;

    ##
    # Default server for unhandled requests from Xray
    ##
    server {
            listen unix:/dev/shm/nginx.sock ssl proxy_protocol default_server;

            server_name _;

            # Provide a default certificate to satisfy the 'ssl' directive.
            # This will not be used for actual client connections.
            ssl_certificate /etc/nginx/ssl/default.crt;
            ssl_certificate_key /etc/nginx/ssl/default.key;

            # Return a 404 or a default page
            return 404;

            # Or serve a default page
            # location / {
            #       root /etc/nginx/html;
            #       index index.html;
            # }
    }
}
